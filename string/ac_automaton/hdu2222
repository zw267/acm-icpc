                                            
  //File Name: hdu2222.cpp
  //Created Time: 2017年01月07日 星期六 14时10分08秒
                                   
#include <bits/stdc++.h>
#define LL long long
using namespace std;
const int MAXN = 1000000 + 1;
const int N = 51;
char str[MAXN],a[N];
struct AC{
	static const int SET = 26;
	static const int MAXN = 500000 + 1;
	int trie[MAXN][SET];
	int fail[MAXN];
	int tag[MAXN];
	int tot;
	void init(){
		fill(trie[0],trie[0] + SET,-1);
		memset(tag,0,sizeof(tag));
		tot = 1;
	}
	void add(int m,const char *s){
		int p = 0;
		for(int i=0;i<m;++i){
			if(trie[p][*s - 'a'] == -1){
				fill(trie[tot],trie[tot]+SET,-1);
				trie[p][*s - 'a'] = tot++;
			}
			p = trie[p][*s - 'a'];
			++s;
		}
		++tag[p];
//		printf("p = %d tag = %d\n",p,tag[p]);
	}
	void build(){
		queue<int> bfs;
		fail[0] = 0;
		for(int i=0;i<SET;++i){
			if(trie[0][i] != -1){
				fail[trie[0][i]] = 0;
				bfs.push(trie[0][i]);
			}
			else{
				trie[0][i] = 0;
			}
		}
		while(!bfs.empty()){
			int p = bfs.front();
			bfs.pop();
			for(int i=0;i<SET;++i){
				if(trie[p][i] != -1){
					fail[trie[p][i]] = trie[fail[p]][i];
					bfs.push(trie[p][i]);
				}
				else{
					trie[p][i] = trie[fail[p]][i];
				}
			}
		}
	}
	int query(int m,const char *s){
		int res = 0,p = 0;
		for(int i=0;i<m;++i){
			p = trie[p][*s - 'a'];
			int tmp = p;
//			printf("p = %d tmp = %d\n",tmp,p);
			while(tmp){
				res += tag[tmp];
//				printf("tmp = %d tag = %d\n",tmp,tag[tmp]);
				tag[tmp] = 0;
				tmp = fail[tmp];
			}
			++s;
		}
		return res;
	}
}ac;
int main(){
	int t,n;
	scanf("%d",&t);
	while(t--){
		ac.init();
		scanf("%d",&n);
		for(int i=0;i<n;++i){
			scanf("%s",a);
			int m = strlen(a);
			ac.add(m,a);
		}
		ac.build();
//		printf("tot = %d\n",ac.tot);
		scanf("%s",str);
		int m = strlen(str);
		printf("%d\n",ac.query(m,str));
	}
	return 0;
}
